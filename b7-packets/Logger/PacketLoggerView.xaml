<UserControl x:Class="b7.Packets.PacketLoggerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:b7.Packets"
             xmlns:wpf="clr-namespace:b7.Packets.WPF"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Loaded="OnLoaded" Unloaded="OnUnloaded"
             DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <Grid Margin="2">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="360"/>
            <ColumnDefinition Width="4"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBox x:Name="textBoxFilter" Margin="0,0,0,4" Padding="2" FontFamily="Consolas" FontSize="12" VerticalContentAlignment="Center"
                 TextChanged="textBoxFilter_TextChanged">
            <wpf:WatermarkService.Watermark>
                <TextBlock Margin="2,0,0,0" FontStyle="Italic">Filter</TextBlock>
            </wpf:WatermarkService.Watermark>
        </TextBox>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ListView x:Name="listViewPacketLogs" FontFamily="Consolas" SelectionChanged="listViewPacketLogs_SelectionChanged"
                  ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Visible"
                  ContextMenuOpening="listViewPacketLogs_ContextMenuOpening">
                <ListView.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Style.Triggers>
                            <!-- Outgoing -->
                            <DataTrigger Binding="{Binding IsOutgoing}" Value="true">
                                <Setter Property="Foreground" Value="DarkCyan" />
                            </DataTrigger>
                            <!-- Incoming -->
                            <DataTrigger Binding="{Binding IsOutgoing}" Value="false">
                                <Setter Property="Foreground" Value="DarkRed" />
                            </DataTrigger>
                            <!-- Modified packets -->
                            <DataTrigger Binding="{Binding IsModified}" Value="true">
                                <Setter Property="Background" Value="#5500FFFF" />
                            </DataTrigger>
                            <!-- Blocked packets -->
                            <DataTrigger Binding="{Binding IsBlocked}" Value="true">
                                <Setter Property="Background" Value="#55FF0000" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="menuItemComposer" Header="Composer" Click="menuItemComposer_Click" />
                        <MenuItem x:Name="menuItemStructuralizer" Header="Structuralizer" Click="menuItemStructuralizer_Click" />
                        <Separator />
                        <MenuItem x:Name="menuItemCopyHex" Header="Copy hex" Click="menuItemCopyHex_Click" />
                        <Separator />
                        <MenuItem x:Name="menuItemResend" Header="Resend" Click="menuItemResend_Click" />
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.View>
                    <GridView AllowsColumnReorder="False">
                        <GridViewColumn Width="26">
                            <GridViewColumn.HeaderContainerStyle>
                                <Style TargetType="GridViewColumnHeader">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" Value="Black"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </GridViewColumn.HeaderContainerStyle>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Text="{Binding DirectionPointer}" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Time" Width="90">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Text="{Binding Time, StringFormat=HH:mm:ss.ff}" TextTrimming="CharacterEllipsis" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Message" Width="160">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Length" Width="60">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Text="{Binding Length, StringFormat=N0}" TextTrimming="CharacterEllipsis" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <StackPanel Margin="0,4,0,0" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                <CheckBox Padding="2" VerticalAlignment="Center" VerticalContentAlignment="Center" Content="Block"
                          IsChecked="{Binding BlockTraffic}" />
                <RadioButton Padding="2" VerticalAlignment="Center" VerticalContentAlignment="Center" GroupName="blockTraffic" Content="incoming"
                             IsChecked="{Binding BlockIn}" />
                <RadioButton Padding="2" VerticalAlignment="Center" VerticalContentAlignment="Center" GroupName="blockTraffic" Content="outgoing"
                             IsChecked="{Binding BlockOut}" />
                <RadioButton Padding="2" VerticalAlignment="Center" VerticalContentAlignment="Center" GroupName="blockTraffic" Content="all"
                             IsChecked="{Binding BlockAll}" />
            </StackPanel>
        </Grid>
        <GridSplitter Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Stretch" Background="Transparent" />
        <TextBox x:Name="textBoxPacket" Grid.Column="2" Grid.RowSpan="2" FontFamily="Consolas" FontSize="12" IsReadOnly="True"
                 VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" />
        <Grid Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button x:Name="buttonSendToClient" Margin="0,4,4,0" ToolTip="Send to client" Content="&lt;&lt;"
                        Foreground="DarkRed" Background="LightCoral" Width="22" Height="22" Click="buttonSendToClient_Click"/>
                <Button Grid.Column="2" x:Name="buttonSendToServer" Margin="4,4,0,0" ToolTip="Send to server" Content="&gt;&gt;"
                        Foreground="DarkCyan" Background="LightCyan" Width="22" Height="22" Click="buttonSendToServer_Click"/>
                <TextBox Grid.Column="1" Margin="0,4,0,0" x:Name="textBoxPacketComposer"
                         FontFamily="Consolas" FontSize="12" VerticalContentAlignment="Center"
                         TextWrapping="Wrap" MaxLines="4" VerticalScrollBarVisibility="Auto">
                    <wpf:WatermarkService.Watermark>
                        <TextBlock Margin="4,0,0,0" FontStyle="Italic">Packet composer</TextBlock>
                    </wpf:WatermarkService.Watermark>
                </TextBox>
            </Grid>
            <ComboBox Grid.Column="1" x:Name="comboBoxDirection" Margin="4,4,0,0" Width="100" SelectedIndex="2"
                      HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                      SelectionChanged="comboBoxDirection_SelectionChanged">
                <ComboBoxItem>Incoming</ComboBoxItem>
                <ComboBoxItem>Outgoing</ComboBoxItem>
                <ComboBoxItem>Both</ComboBoxItem>
            </ComboBox>
            <Button Grid.Column="2" x:Name="buttonClear" Content="Clear" Margin="4,4,0,0" Padding="8,2,8,2" Click="buttonClear_Click" />
            <Button Grid.Column="3" Margin="4,4,0,0" Padding="0" Width="50"
                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                    Click="buttonStartStop_Click">
                <Grid>
                    <Grid ClipToBounds="True">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Opacity" Value="0.0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsLogging}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="1.0"
                                                        Duration="0:0:0.33" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="0.0"
                                                        Duration="0:0:0.33" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <ProgressBar IsIndeterminate="True" BorderThickness="0" Background="LightGreen">
                            <ProgressBar.RenderTransform>
                                <ScaleTransform ScaleX="2.0" />
                            </ProgressBar.RenderTransform>
                            <ProgressBar.Foreground>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                    <GradientStop Offset="0" Color="LightGreen" />
                                    <GradientStop Offset="1" Color="LimeGreen" />
                                </LinearGradientBrush>
                            </ProgressBar.Foreground>
                        </ProgressBar>
                    </Grid>
                    <TextBlock x:Name="buttonLogText" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="Start" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsLogging}" Value="True">
                                        <Setter Property="Text" Value="Stop" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Button>
        </Grid>
    </Grid>
</UserControl>